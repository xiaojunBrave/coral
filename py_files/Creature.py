# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Creature.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtWidgets import QMessageBox

from utility.guet_judge import GuetJudge


class Creature(QtWidgets.QMainWindow):
    ct_signal = pyqtSignal(object)

    def __init__(self, parent=None):
        super(Creature, self).__init__(parent)
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(450, 400)
        MainWindow.setMinimumSize(QtCore.QSize(450, 400))
        MainWindow.setMaximumSize(QtCore.QSize(450, 400))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.horizontalLayout.setStretch(0, 7)
        self.horizontalLayout.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_3.addWidget(self.lineEdit_2)
        self.horizontalLayout_3.setStretch(0, 7)
        self.horizontalLayout_3.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_4.addWidget(self.lineEdit_3)
        self.horizontalLayout_4.setStretch(0, 7)
        self.horizontalLayout_4.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_6.addWidget(self.label_4)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_6.addWidget(self.lineEdit_4)
        self.horizontalLayout_6.setStretch(0, 7)
        self.horizontalLayout_6.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setMinimumSize(QtCore.QSize(0, 30))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.horizontalLayout_2.addWidget(self.lineEdit_5)
        self.horizontalLayout_2.setStretch(0, 7)
        self.horizontalLayout_2.setStretch(1, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setContentsMargins(-1, 0, -1, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton.setMaximumSize(QtCore.QSize(100, 50))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_5.addWidget(self.pushButton)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 450, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.InputEvent)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "生物版块"))
        self.label.setText(_translate("MainWindow", "5年内珊瑚死亡率增加的数量%:"))
        self.label_2.setText(_translate("MainWindow", "珊瑚病害%:"))
        self.label_3.setText(_translate("MainWindow", "硬珊瑚补充量（个/m²）:"))
        self.label_4.setText(_translate("MainWindow", "5年内活珊瑚种类减少的数量%:"))
        self.label_5.setText(_translate("MainWindow", "5年内珊瑚礁鱼类密度减少%:"))
        self.pushButton.setText(_translate("MainWindow", "输入"))


    def InputEvent(self):
        result = QMessageBox.question(self, "注意", "您确定好输入的参数了吗",
                                          QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)
        attribute1 = self.lineEdit.text()  # 5年内珊瑚死亡率增加的数量
        attribute2 = self.lineEdit_2.text()  # 珊瑚病害
        attribute3 = self.lineEdit_3.text()  # 硬珊瑚补充量
        attribute4 = self.lineEdit_4.text()  # 5年内活珊瑚种类减少的数量
        attribute5 = self.lineEdit_5.text()  # 5年内珊瑚礁鱼类密度减少
        b = True
        if result == QMessageBox.Yes:
            if ((len(attribute1) == 0) or (len(attribute2) == 0) or (len(attribute3) == 0) or (
                    len(attribute4) == 0) or (len(attribute5) == 0)):
                attribute1 = float(0)
                attribute2 = float(0)
                attribute3 = float(0)
                attribute4 = float(0)
                attribute5 = float(0)
                b = False
                QMessageBox.critical(self, "错误", "无法进行珊瑚礁健康评价，缺少生物版块参数")
            else:
                # 判断是否输入的都是数字
                if (GuetJudge.is_number(attribute1) and GuetJudge.is_number(attribute2) and GuetJudge.is_number(attribute3)
                        and GuetJudge.is_number(attribute4) and GuetJudge.is_number(attribute5)):
                    QMessageBox.information(self, "通知", "成功输入数据")
                    attribute1 = float(attribute1)
                    attribute2 = float(attribute2)
                    attribute3 = float(attribute3)
                    attribute4 = float(attribute4)
                    attribute5 = float(attribute5)
                    self.close()
                else:
                    QMessageBox.critical(self, "错误", "请输入正确类型的参数")
            ct = CT(attribute1, attribute2, attribute3, attribute4, attribute5, b)
            self.ct_signal.emit(ct)
        elif result == QMessageBox.No:
            pass

    def evaluate(self):
        attribute1 = float(self.lineEdit.text())  # 5年内珊瑚死亡率增加的数量
        attribute2 = float(self.lineEdit_2.text())  # 珊瑚病害
        attribute3 = float(self.lineEdit_3.text())  # 硬珊瑚补充量
        attribute4 = float(self.lineEdit_4.text())  # 5年内活珊瑚种类减少的数量
        attribute5 = float(self.lineEdit_5.text())  # 5年内珊瑚礁鱼类密度减少
        attribute1_score = 10 if (attribute1 > 10) else (30 if (5 < attribute1 < 10) else 50)
        attribute2_score = 10 if (attribute2 > 5) else (30 if (1 < attribute2 < 5) else 50)
        attribute3_score = 10 if (attribute3 < 0.5) else (30 if (0.5 < attribute3 < 1.0) else 50)
        attribute4_score = 10 if (attribute4 > 5) else (30 if (1 < attribute4 < 5) else 50)
        attribute5_score = 10 if (attribute5 > 10) else (30 if (5 < attribute5 < 10) else 50)
        ct_score = attribute1_score + attribute2_score + attribute3_score + attribute4_score + attribute5_score
        return ct_score/5

class CT:
    def __init__(self, attribute1, attribute2, attribute3, attribute4, attribute5, b):
        self.attribute1 = attribute1
        self.attribute2 = attribute2
        self.attribute3 = attribute3
        self.attribute4 = attribute4
        self.attribute5 = attribute5
        self.b = b

